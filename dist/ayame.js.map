{"version":3,"file":"ayame.js","sources":["../src/utils.ts","../src/connection/base.ts","../src/connection/index.ts","../src/ayame.ts"],"sourcesContent":["import { VideoCodecOption } from './connection/options';\n\n/**\n * @ignore\n */\ninterface Window {\n  performance: WindowPerformance;\n  navigator: any;\n}\ninterface WindowPerformance {\n  now(): number;\n}\ndeclare let window: Window;\n\n/**\n * @ignore\n */\nexport function randomString(strLength: number): string {\n  const result = [];\n  const charSet = '0123456789';\n  while (strLength--) {\n    result.push(charSet.charAt(Math.floor(Math.random() * charSet.length)));\n  }\n  return result.join('');\n}\n\n/**\n * @ignore\n */\nexport function browser(): string {\n  const ua = window.navigator.userAgent.toLocaleLowerCase();\n  if (ua.indexOf('edge') !== -1) {\n    return 'edge';\n  } else if (ua.indexOf('chrome') !== -1 && ua.indexOf('edge') === -1) {\n    return 'chrome';\n  } else if (ua.indexOf('safari') !== -1 && ua.indexOf('chrome') === -1) {\n    return 'safari';\n  } else if (ua.indexOf('opera') !== -1) {\n    return 'opera';\n  } else if (ua.indexOf('firefox') !== -1) {\n    return 'firefox';\n  }\n  return 'unknown';\n}\n\n/**\n * @ignore\n */\nexport function traceLog(title: string, value?: string | Record<string, any>): void {\n  let prefix = '';\n  if (window.performance) {\n    prefix = '[Ayame ' + (window.performance.now() / 1000).toFixed(3) + ']';\n  }\n  if (browser() === 'edge') {\n    console.log(prefix + ' ' + title + '\\n', value);\n  } else {\n    console.info(prefix + ' ' + title + '\\n', value);\n  }\n}\n\n// Stack Overflow より引用: https://stackoverflow.com/a/52760103\n// https://stackoverflow.com/questions/52738290/how-to-remove-video-codecs-in-webrtc-sdp\n/** @private */\nexport function getVideoCodecsFromString(codec: VideoCodecOption, codecs: Array<any>): Array<any> {\n  let mimeType = '';\n  if (codec === 'VP8') {\n    mimeType = 'video/VP8';\n  } else if (codec === 'VP9') {\n    mimeType = 'video/VP9';\n  } else if (codec === 'H264') {\n    mimeType = 'video/H264';\n  } else {\n    mimeType = `video/${codec}`;\n  }\n  const filteredCodecs: Array<any> = codecs.filter(c => c.mimeType == mimeType);\n  if (filteredCodecs.length < 1) {\n    throw new Error('invalid video codec type');\n  }\n  return filteredCodecs;\n}\n\n/**\n * @ignore\n */\nexport function removeCodec(sdp: string, codec: VideoCodecOption): string {\n  function internalFunc(tmpSdp: string): string {\n    // eslint-disable-next-line no-useless-escape\n    const codecre = new RegExp('(a=rtpmap:(\\\\d*) ' + codec + '/90000\\\\r\\\\n)');\n    const rtpmaps = tmpSdp.match(codecre);\n    if (rtpmaps == null || rtpmaps.length <= 2) {\n      return sdp;\n    }\n    const rtpmap = rtpmaps[2];\n    let modsdp = tmpSdp.replace(codecre, '');\n\n    const rtcpre = new RegExp('(a=rtcp-fb:' + rtpmap + '.*\\r\\n)', 'g');\n    modsdp = modsdp.replace(rtcpre, '');\n\n    const fmtpre = new RegExp('(a=fmtp:' + rtpmap + '.*\\r\\n)', 'g');\n    modsdp = modsdp.replace(fmtpre, '');\n\n    const aptpre = new RegExp('(a=fmtp:(\\\\d*) apt=' + rtpmap + '\\\\r\\\\n)');\n    const aptmaps = modsdp.match(aptpre);\n    let fmtpmap = '';\n    if (aptmaps != null && aptmaps.length >= 3) {\n      fmtpmap = aptmaps[2];\n      modsdp = modsdp.replace(aptpre, '');\n\n      const rtppre = new RegExp('(a=rtpmap:' + fmtpmap + '.*\\r\\n)', 'g');\n      modsdp = modsdp.replace(rtppre, '');\n    }\n\n    const videore = /(m=video.*\\r\\n)/;\n    const videolines = modsdp.match(videore);\n    if (videolines != null) {\n      //If many m=video are found in SDP, this program doesn't work.\n      const videoline = videolines[0].substring(0, videolines[0].length - 2);\n      const videoelems = videoline.split(' ');\n      let modvideoline = videoelems[0];\n      videoelems.forEach((videoelem, index) => {\n        if (index === 0) return;\n        if (videoelem == rtpmap || videoelem == fmtpmap) {\n          return;\n        }\n        modvideoline += ' ' + videoelem;\n      });\n      modvideoline += '\\r\\n';\n      modsdp = modsdp.replace(videore, modvideoline);\n    }\n    return internalFunc(modsdp);\n  }\n  return internalFunc(sdp);\n}\n","/* @private */\nimport { traceLog, getVideoCodecsFromString, removeCodec, browser } from '../utils';\nimport { ConnectionOptions, VideoCodecOption } from './options';\n\n/**\n * @ignore\n */\ninterface AyameRegisterMessage {\n  type: string;\n  roomId: string;\n  clientId: string;\n  key?: string;\n  authnMetadata?: any;\n}\n\n/**\n * @ignore\n */\nclass ConnectionBase {\n  debug: boolean;\n  roomId: string;\n  signalingUrl: string;\n  options: ConnectionOptions;\n  connectionState: string;\n  stream: MediaStream | null;\n  remoteStream: MediaStream | null;\n  authnMetadata: any;\n  authzMetadata: any;\n  _ws: WebSocket | null;\n  _pc: RTCPeerConnection | null;\n  _callbacks: any;\n  _removeCodec: boolean;\n  _isOffer: boolean;\n  _isExistUser: boolean;\n  _dataChannels: Array<RTCDataChannel>;\n  _pcConfig: {\n    iceServers: Array<RTCIceServer>;\n    iceTransportPolicy: RTCIceTransportPolicy;\n  };\n\n  /**\n   * @ignore\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  on(kind: string, callback: Function): void {\n    if (kind in this._callbacks) {\n      this._callbacks[kind] = callback;\n    }\n  }\n\n  /**\n   * オブジェクトを生成し、リモートのピアまたはサーバーに接続します。\n   * @param signalingUrl シグナリングに利用する URL\n   * @param roomId Ayame のルームID\n   * @param options Ayame の接続オプション\n   * @param [debug=false] デバッグログの出力可否\n   * @param [isRelay=false] iceTransportPolicy を強制的に relay にするか\n   * @listens {open} Ayame Server に accept され、PeerConnection が生成されると送信されます。\n   * @listens {connect} PeerConnection が接続されると送信されます。\n   * @listens {disconnect} PeerConnection が切断されると送信されます。\n   * @listens {addstream} リモートのストリームが追加されると送信されます。\n   * @listens {removestream} リモートのストリームが削除されると送信されます。\n   * @listens {bye} Ayame Server から bye を受信すると送信されます。\n   */\n  constructor(signalingUrl: string, roomId: string, options: ConnectionOptions, debug = false, isRelay = false) {\n    this.debug = debug;\n    this.roomId = roomId;\n    this.signalingUrl = signalingUrl;\n    this.options = options;\n    this._removeCodec = false;\n    this.stream = null;\n    this.remoteStream = null;\n    this._pc = null;\n    this._ws = null;\n    this.authnMetadata = null;\n    this.authzMetadata = null;\n    this._dataChannels = [];\n    this._isOffer = false;\n    this._isExistUser = false;\n    this.connectionState = 'new';\n    this._pcConfig = {\n      iceServers: this.options.iceServers,\n      iceTransportPolicy: isRelay ? 'relay' : 'all'\n    };\n    this._callbacks = {\n      open: () => {},\n      connect: () => {},\n      disconnect: () => {},\n      addstream: () => {},\n      removestream: () => {},\n      bye: () => {},\n      datachannel: () => {}\n    };\n  }\n\n  async _disconnect(): Promise<void> {\n    await this._dataChannels.forEach(async (dataChannel: RTCDataChannel) => {\n      await this._closeDataChannel(dataChannel);\n    });\n    await this._closePeerConnection();\n    await this._closeWebSocketConnection();\n    this.authzMetadata = null;\n    this._removeCodec = false;\n    this._isOffer = false;\n    this._isExistUser = false;\n    this._dataChannels = [];\n    this.connectionState = 'new';\n  }\n\n  async _signaling(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      if (this._ws) {\n        return reject('WS-ALREADY-EXISTS');\n      }\n      this._ws = new WebSocket(this.signalingUrl);\n      this._ws.onclose = async () => {\n        await this._disconnect();\n        this._callbacks.disconnect({ reason: 'WS-CLOSED' });\n        return reject('WS-CLOSED');\n      };\n      this._ws.onerror = async () => {\n        await this._disconnect();\n        return reject('WS-CLOSED-WITH-ERROR');\n      };\n      this._ws.onopen = () => {\n        const registerMessage: AyameRegisterMessage = {\n          type: 'register',\n          roomId: this.roomId,\n          clientId: this.options.clientId,\n          authnMetadata: undefined,\n          key: undefined\n        };\n        if (this.authnMetadata !== null) {\n          registerMessage.authnMetadata = this.authnMetadata;\n        }\n        if (this.options.signalingKey !== null) {\n          registerMessage.key = this.options.signalingKey;\n        }\n        this._sendWs(registerMessage);\n        if (this._ws) {\n          this._ws.onmessage = async (event: MessageEvent) => {\n            try {\n              if (typeof event.data !== 'string') {\n                return;\n              }\n              const message = JSON.parse(event.data);\n              if (message.type === 'ping') {\n                this._sendWs({ type: 'pong' });\n              } else if (message.type === 'bye') {\n                this._callbacks.bye(event);\n                return resolve();\n              } else if (message.type === 'accept') {\n                this.authzMetadata = message.authzMetadata;\n                if (Array.isArray(message.iceServers) && message.iceServers.length > 0) {\n                  this._traceLog('iceServers=>', message.iceServers);\n                  this._pcConfig.iceServers = message.iceServers;\n                }\n                this._traceLog('isExistUser=>', message.isExistUser);\n                this._isExistUser = message.isExistUser;\n                this._createPeerConnection();\n                if (this._isExistUser === true) {\n                  await this._sendOffer();\n                }\n                return resolve();\n              } else if (message.type === 'reject') {\n                await this._disconnect();\n                this._callbacks.disconnect({ reason: message.reason || 'REJECTED' });\n                return reject('REJECTED');\n              } else if (message.type === 'offer') {\n                if (this._pc && this._pc.signalingState === 'have-local-offer') {\n                  this._createPeerConnection();\n                }\n                this._setOffer(new RTCSessionDescription(message));\n              } else if (message.type === 'answer') {\n                await this._setAnswer(new RTCSessionDescription(message));\n              } else if (message.type === 'candidate') {\n                if (message.ice) {\n                  this._traceLog('Received ICE candidate ...', message.ice);\n                  const candidate = new RTCIceCandidate(message.ice);\n                  this._addIceCandidate(candidate);\n                }\n              }\n            } catch (error) {\n              await this._disconnect();\n              this._callbacks.disconnect({ reason: 'SIGNALING-ERROR', error: error });\n            }\n          };\n        }\n      };\n    });\n  }\n\n  _createPeerConnection(): void {\n    this._traceLog('RTCConfiguration=>', this._pcConfig);\n    const pc = new RTCPeerConnection(this._pcConfig);\n    const audioTrack = this.stream && this.stream.getAudioTracks()[0];\n    if (audioTrack && this.options.audio.direction !== 'recvonly') {\n      pc.addTrack(audioTrack, this.stream!);\n    } else if (this.options.audio.enabled) {\n      pc.addTransceiver('audio', { direction: 'recvonly' });\n    }\n    const videoTrack = this.stream && this.stream.getVideoTracks()[0];\n    if (videoTrack && this.options.video.direction !== 'recvonly') {\n      const videoSender = pc.addTrack(videoTrack, this.stream!);\n      const videoTransceiver = this._getTransceiver(pc, videoSender);\n      if (this._isVideoCodecSpecified() && videoTransceiver !== null) {\n        if (typeof videoTransceiver.setCodecPreferences !== 'undefined') {\n          const videoCapabilities = RTCRtpSender.getCapabilities('video');\n          if (videoCapabilities) {\n            let videoCodecs = [];\n            if (this.options.video.codec) {\n              videoCodecs = getVideoCodecsFromString(this.options.video.codec, videoCapabilities.codecs);\n            }\n            this._traceLog('video codecs=', videoCodecs);\n            videoTransceiver.setCodecPreferences(videoCodecs);\n          }\n        } else {\n          this._removeCodec = true;\n        }\n      }\n    } else if (this.options.video.enabled) {\n      const videoTransceiver = pc.addTransceiver('video', { direction: 'recvonly' });\n      if (this._isVideoCodecSpecified()) {\n        if (typeof videoTransceiver.setCodecPreferences !== 'undefined') {\n          const videoCapabilities = RTCRtpSender.getCapabilities('video');\n          if (videoCapabilities) {\n            let videoCodecs = [];\n            if (this.options.video.codec) {\n              videoCodecs = getVideoCodecsFromString(this.options.video.codec, videoCapabilities.codecs);\n            }\n            this._traceLog('video codecs=', videoCodecs);\n            videoTransceiver.setCodecPreferences(videoCodecs);\n          }\n        } else {\n          this._removeCodec = true;\n        }\n      }\n    }\n    const tracks: Array<MediaStreamTrack> = [];\n    pc.ontrack = (event: RTCTrackEvent) => {\n      const callbackEvent: any = event;\n      this._traceLog('peer.ontrack()', event);\n      if (browser() === 'safari') {\n        tracks.push(event.track);\n        const mediaStream = new MediaStream(tracks);\n        this.remoteStream = mediaStream;\n      } else {\n        this.remoteStream = event.streams[0];\n      }\n      callbackEvent.stream = this.remoteStream;\n      this._callbacks.addstream(callbackEvent);\n    };\n    pc.onicecandidate = (event: RTCPeerConnectionIceEvent) => {\n      this._traceLog('peer.onicecandidate()', event);\n      if (event.candidate) {\n        this._sendIceCandidate(event.candidate);\n      } else {\n        this._traceLog('empty ice event', '');\n      }\n    };\n    pc.oniceconnectionstatechange = async () => {\n      this._traceLog('ICE connection Status has changed to ', pc.iceConnectionState);\n      if (this.connectionState !== pc.iceConnectionState) {\n        this.connectionState = pc.iceConnectionState;\n        switch (this.connectionState) {\n          case 'connected':\n            this._isOffer = false;\n            this._callbacks.connect();\n            break;\n          case 'disconnected':\n          case 'failed':\n            await this._disconnect();\n            this._callbacks.disconnect({ reason: 'ICE-CONNECTION-STATE-FAILED' });\n            break;\n        }\n      }\n    };\n    pc.onsignalingstatechange = (_) => {\n      this._traceLog('signaling state changes:', pc.signalingState);\n    };\n    pc.ondatachannel = this._onDataChannel.bind(this);\n    if (!this._pc) {\n      this._pc = pc;\n      this._callbacks.open({ authzMetadata: this.authzMetadata });\n    } else {\n      this._pc = pc;\n    }\n  }\n\n  async _createDataChannel(label: string, options: RTCDataChannelInit | undefined): Promise<RTCDataChannel | null> {\n    return new Promise<RTCDataChannel | null>((resolve, reject) => {\n      if (!this._pc) return reject('PeerConnection Does Not Ready');\n      if (this._isOffer) return reject('PeerConnection Has Local Offer');\n      let dataChannel = this._findDataChannel(label);\n      if (dataChannel) {\n        return reject('DataChannel Already Exists!');\n      }\n      if (this._isExistUser) {\n        dataChannel = this._pc.createDataChannel(label, options);\n        dataChannel.onclose = (event: Record<string, any>) => {\n          this._traceLog('datachannel onclosed=>', event);\n          this._dataChannels = this._dataChannels.filter((dataChannel) => dataChannel.label != label);\n        };\n        dataChannel.onerror = (event: Record<string, any>) => {\n          this._traceLog('datachannel onerror=>', event);\n          this._dataChannels = this._dataChannels.filter((dataChannel) => dataChannel.label != label);\n        };\n        dataChannel.onmessage = (event: any) => {\n          this._traceLog('datachannel onmessage=>', event.data);\n          event.label = label;\n        };\n        dataChannel.onopen = (event: Record<string, any>) => {\n          this._traceLog('datachannel onopen=>', event);\n        };\n        this._dataChannels.push(dataChannel);\n        return resolve(dataChannel);\n      }\n      return resolve(null);\n    });\n  }\n\n  _onDataChannel(event: RTCDataChannelEvent): void {\n    this._traceLog('on data channel', event);\n    if (!this._pc) return;\n    const dataChannel = event.channel;\n    const label = event.channel.label;\n    if (!event.channel) return;\n    if (!label || label.length < 1) return;\n    dataChannel.onopen = async (event: Record<string, any>) => {\n      this._traceLog('datachannel onopen=>', event);\n    };\n    dataChannel.onclose = async (event: Record<string, any>) => {\n      this._traceLog('datachannel onclosed=>', event);\n    };\n    dataChannel.onerror = async (event: Record<string, any>) => {\n      this._traceLog('datachannel onerror=>', event);\n    };\n    dataChannel.onmessage = (event: any) => {\n      this._traceLog('datachannel onmessage=>', event.data);\n      event.label = label;\n    };\n    if (!this._findDataChannel(label)) {\n      this._dataChannels.push(event.channel);\n    } else {\n      this._dataChannels = this._dataChannels.map((channel) => {\n        if (channel.label == label) {\n          return dataChannel;\n        } else {\n          return channel;\n        }\n      });\n    }\n    this._callbacks.datachannel(dataChannel);\n  }\n\n  async _sendOffer() {\n    if (!this._pc) {\n      return;\n    }\n    if (browser() === 'safari') {\n      if (this.options.video.enabled && this.options.video.direction === 'sendrecv') {\n        this._pc.addTransceiver('video', { direction: 'recvonly' });\n      }\n      if (this.options.audio.enabled && this.options.audio.direction === 'sendrecv') {\n        this._pc.addTransceiver('audio', { direction: 'recvonly' });\n      }\n    }\n    const offer: any = await this._pc.createOffer({\n      offerToReceiveAudio: this.options.audio.enabled && this.options.audio.direction !== 'sendonly',\n      offerToReceiveVideo: this.options.video.enabled && this.options.video.direction !== 'sendonly'\n    });\n    if (this._removeCodec && this.options.video.codec) {\n      const codecs: Array<VideoCodecOption> = ['VP8', 'VP9', 'H264'];\n      codecs.forEach((codec: VideoCodecOption) => {\n        if (this.options.video.codec !== codec) {\n          offer.sdp = removeCodec(offer.sdp, codec);\n        }\n      });\n    }\n    this._traceLog('create offer sdp, sdp=', offer.sdp);\n    await this._pc.setLocalDescription(offer);\n    if (this._pc.localDescription) {\n      this._sendSdp(this._pc.localDescription);\n    }\n    this._isOffer = true;\n  }\n\n  _isVideoCodecSpecified(): boolean {\n    return this.options.video.enabled && this.options.video.codec !== null;\n  }\n\n  async _createAnswer(): Promise<void> {\n    if (!this._pc) {\n      return;\n    }\n    try {\n      const answer = await this._pc.createAnswer();\n      this._traceLog('create answer sdp, sdp=', answer.sdp);\n      await this._pc.setLocalDescription(answer);\n      if (this._pc.localDescription) this._sendSdp(this._pc.localDescription);\n    } catch (error) {\n      await this._disconnect();\n      this._callbacks.disconnect({ reason: 'CREATE-ANSWER-ERROR', error: error });\n    }\n  }\n\n  async _setAnswer(sessionDescription: RTCSessionDescription): Promise<void> {\n    if (!this._pc) {\n      return;\n    }\n    await this._pc.setRemoteDescription(sessionDescription);\n    this._traceLog('set answer sdp=', sessionDescription.sdp);\n  }\n\n  async _setOffer(sessionDescription: RTCSessionDescription): Promise<void> {\n    try {\n      if (!this._pc) {\n        return;\n      }\n      await this._pc.setRemoteDescription(sessionDescription);\n      this._traceLog('set offer sdp=', sessionDescription.sdp);\n      await this._createAnswer();\n    } catch (error) {\n      await this._disconnect();\n      this._callbacks.disconnect({ reason: 'SET-OFFER-ERROR', error: error });\n    }\n  }\n\n  async _addIceCandidate(candidate: RTCIceCandidate): Promise<void> {\n    try {\n      if (this._pc) {\n        await this._pc.addIceCandidate(candidate);\n      }\n    } catch (_error) {\n      this._traceLog('invalid ice candidate', candidate);\n    }\n  }\n\n  _sendIceCandidate(candidate: RTCIceCandidate): void {\n    const message = { type: 'candidate', ice: candidate };\n    this._sendWs(message);\n  }\n\n  _sendSdp(sessionDescription: RTCSessionDescription): void {\n    this._sendWs(sessionDescription);\n  }\n\n  _sendWs(message: Record<string, any>) {\n    if (this._ws) {\n      this._ws.send(JSON.stringify(message));\n    }\n  }\n\n  _getTransceiver(pc: RTCPeerConnection, track: any): RTCRtpTransceiver | null {\n    let transceiver = null;\n    pc.getTransceivers().forEach((t: RTCRtpTransceiver) => {\n      if (t.sender == track || t.receiver == track) transceiver = t;\n    });\n    if (!transceiver) {\n      throw new Error('invalid transceiver');\n    }\n    return transceiver;\n  }\n\n  _findDataChannel(label: string): RTCDataChannel | undefined {\n    return this._dataChannels.find((channel) => channel.label == label);\n  }\n\n  async _closeDataChannel(dataChannel: RTCDataChannel): Promise<void> {\n    return new Promise((resolve) => {\n      if (dataChannel.readyState === 'closed') return resolve();\n      dataChannel.onclose = null;\n      const timerId = setInterval(() => {\n        if (dataChannel.readyState === 'closed') {\n          clearInterval(timerId);\n          return resolve();\n        }\n      }, 400);\n      dataChannel && dataChannel.close();\n    });\n  }\n\n  async _closePeerConnection(): Promise<void> {\n    return new Promise<void>((resolve) => {\n      if (browser() === 'safari' && this._pc) {\n        this._pc.oniceconnectionstatechange = () => {};\n        this._pc.close();\n        this._pc = null;\n        return resolve();\n      }\n      if (!this._pc) return resolve();\n      if (this._pc && this._pc.signalingState == 'closed') {\n        this._pc = null;\n        return resolve();\n      }\n      this._pc.oniceconnectionstatechange = () => {};\n      const timerId = setInterval(() => {\n        if (!this._pc) {\n          clearInterval(timerId);\n          return resolve();\n        }\n        if (this._pc && this._pc.signalingState == 'closed') {\n          this._pc = null;\n          clearInterval(timerId);\n          return resolve();\n        }\n      }, 400);\n      this._pc.close();\n    });\n  }\n\n  async _closeWebSocketConnection(): Promise<void> {\n    return new Promise<void>(resolve => {\n      if (!this._ws) return resolve();\n      if (this._ws && this._ws.readyState === 3) {\n        this._ws = null;\n        return resolve();\n      }\n      this._ws.onclose = () => {};\n      const timerId = setInterval(() => {\n        if (!this._ws) {\n          clearInterval(timerId);\n          return resolve();\n        }\n        if (this._ws.readyState === 3) {\n          this._ws = null;\n          clearInterval(timerId);\n          return resolve();\n        }\n      }, 400);\n      this._ws && this._ws.close();\n    });\n  }\n\n  _traceLog(title: string, message?: Record<string, any> | string) {\n    if (!this.debug) return;\n    traceLog(title, message);\n  }\n}\n\nexport default ConnectionBase;\n","import ConnectionBase from './base';\nimport { ConnectionOptions, MetadataOption } from './options';\n\n/**\n * Peer Connection 接続を管理するクラスです。\n */\nclass Connection extends ConnectionBase {\n  /**\n   * @desc オブジェクトを生成し、リモートのピアまたはサーバーに接続します。\n   * @param {string} signalingUrl シグナリングに利用する URL\n   * @param {string} roomId Ayame のルームID\n   * @param {ConnectionOptions} options Ayame の接続オプション\n   * @param {boolean} [debug=false] デバッグログの出力可否\n   * @param {boolean} [isRelay=false] iceTransportPolicy を強制的に relay にするか\n   * @listens {open} Ayame Server に accept され、PeerConnection が生成されると送信されます。\n   * @listens {connect} PeerConnection が接続されると送信されます。\n   * @listens {disconnect} PeerConnection が切断されると送信されます。\n   * @listens {addstream} リモートのストリームが追加されると送信されます。\n   * @listens {removestream} リモートのストリームが削除されると送信されます。\n   */\n  constructor(signalingUrl: string, roomId: string, options: ConnectionOptions, debug = false, isRelay = false) {\n    super(signalingUrl, roomId, options, debug, isRelay);\n  }\n\n  /**\n   * @typedef {Object} MetadataOption - 接続時に指定できるメタデータです。\n   * @property {any} authnMetadata 送信するメタデータ\n   */\n\n  /**\n   * @desc PeerConnection  接続を開始します。\n   * @param {MediaStream|null} [stream=null] - ローカルのストリーム\n   * @param {MetadataOption|null} [metadataOption=null] - 送信するメタデータ\n   */\n  public async connect(stream: MediaStream | null, metadataOption: MetadataOption | null = null): Promise<void> {\n    if (this._ws || this._pc) {\n      this._traceLog('connection already exists');\n      throw new Error('Connection Already Exists!');\n    }\n    /** @type {MediaStream|null} */\n    this.stream = stream;\n    if (metadataOption) {\n      /** @type {any} */\n      this.authnMetadata = metadataOption.authnMetadata;\n    }\n    await this._signaling();\n  }\n\n  /**\n   * @desc Datachannel を作成します。\n   * @param {string} label - dataChannel の label\n   * @param {RTCDataChannelInit|undefined} [options=undefined] - dataChannel の init オプション\n   * @return {RTCDataChannel|null} 生成されたデータチャネル\n   */\n  public async createDataChannel(\n    label: string,\n    options: RTCDataChannelInit | undefined = undefined\n  ): Promise<RTCDataChannel | null> {\n    return await this._createDataChannel(label, options);\n  }\n\n  /**\n   * @desc Datachannel を削除します。\n   * @param {string} label - 削除する dataChannel の label\n   */\n  public async removeDataChannel(label: string): Promise<void> {\n    this._traceLog('datachannel remove=>', label);\n    const dataChannel = this._findDataChannel(label);\n    if (dataChannel && dataChannel.readyState === 'open') {\n      await this._closeDataChannel(dataChannel);\n    } else {\n      throw new Error('data channel is not exist or open');\n    }\n  }\n\n  /**\n   * @desc PeerConnection  接続を切断します。\n   */\n  public async disconnect(): Promise<void> {\n    return new Promise(resolve => {\n      if (this._ws) {\n        this._ws.close();\n      }\n      return resolve();\n    });\n  }\n}\n\nexport default Connection;\n","import Connection from './connection';\nimport { ConnectionOptions } from './connection/options';\nimport { randomString } from './utils';\n\n/**\n * オーディオ、ビデオの送受信方向に関するオプションです。\n * - sendrecv\n * - recvonly\n * - sendonly\n *\n * @typedef {string} ConnectionDirection\n */\n\n/**\n * @typedef {Object} ConnectionAudioOption - オーディオ接続に関するオプションです。\n * @property {ConnectionDirection} direction 送受信方向\n * @property {boolean} enabled 有効かどうかのフラグ\n */\n\n/**\n * ビデオ接続のコーデックに関するオプションです。\n * - VP8\n * - VP9\n * - H264\n *\n * @typedef {string} VideoCodecOption\n */\n\n/**\n * @typedef {Object} ConnectionVideoOption - ビデオ接続に関するオプションです。\n * @property {VideoCodecOption} codec コーデックの設定\n * @property {ConnectionDirection} direction 送受信方向\n * @property {boolean} enabled 有効かどうかのフラグ\n */\n\n/**\n * @typedef {Object} ConnectionOptions - 接続時に指定するオプションです。\n * @property {ConnectionAudioOption} audio オーディオの設定\n * @property {ConnectionVideoOption} video ビデオの設定\n * @property {string} clientId クライアントID\n * @property {Array.<RTCIceServer>} iceServers ayame server から iceServers が返って来なかった場合に使われる iceServer の情報\n * @property {string} signalingKey 送信するシグナリングキー\n */\n\n/**\n * Ayame Connection のデフォルトのオプションです。\n *\n * audio: { direction: 'sendrecv', enabled: true}\n *\n * video: { direction: 'sendrecv', enabled: true}\n *\n * iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n *\n * clientId: randomString(17)\n *\n * @type {ConnectionOptions} ConnectionOptions\n */\nexport const defaultOptions: ConnectionOptions = {\n  audio: { direction: 'sendrecv', enabled: true },\n  video: { direction: 'sendrecv', enabled: true },\n  iceServers: [{ urls: 'stun:stun.l.google.com:19302' }],\n  clientId: randomString(17)\n};\n\n/**\n * @desc Ayame Connection を生成します。\n * @param {string} signalingUrl シグナリングに用いる websocket url\n * @param {string} roomId 接続する roomId\n * @param {ConnectionOptions} [options=defaultOptions] 接続時のオプション\n * @param {boolean} [debug=false] デバッグログを出力するかどうかのフラグ\n * @param {boolean} [isRelay=false] iceTranspolicy を強制的に relay するかどうかのフラグ(デバッグ用)\n * @return {Connection} 生成された Ayame Connection\n */\nexport function connection(\n  signalingUrl: string,\n  roomId: string,\n  options: ConnectionOptions = defaultOptions,\n  debug = false,\n  isRelay = false\n): Connection {\n  return new Connection(signalingUrl, roomId, options, debug, isRelay);\n}\n\n/**\n * @desc Ayame Web SDK のバージョンを出力します。\n * @return {string} Ayame Web SDK のバージョン\n */\nexport function version(): string {\n  return process.version;\n}\n"],"names":[],"mappings":"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"}